name: Build iOS App with EAS

on:
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile to use'
        required: true
        default: 'preview-device'
        type: choice
        options:
          - preview-device
          - development
          - production
          - testflight
      build_message:
        description: 'Build message'
        required: false
        default: 'GitHub Actions build'
      publish_update:
        description: 'Publish OTA update after build'
        required: false
        default: false
        type: boolean
      update_message:
        description: 'OTA update message'
        required: false
        default: 'GitHub Actions OTA update'

env:
  EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
  EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
  EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
  EXPO_TEAM_ID: ${{ secrets.EXPO_TEAM_ID }}
  EAS_PROJECT_ID: e3775235-7f75-42c8-906e-8171c4a1e54b
  NODE_OPTIONS: --openssl-legacy-provider

jobs:
  build-ios:
    runs-on: macos-15
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: 📦 Install dependencies
        run: |
          npm ci
          npm install -g eas-cli@latest

      - name: 🔄 Verify EAS CLI installation
        run: |
          echo "EAS CLI version:"
          eas --version

      - name: 📦 Setup EAS build cache
        uses: actions/cache@v3
        with:
          path: ~/.eas-build-local
          key: ${{ runner.os }}-eas-build-local-${{ hashFiles('**/package.json') }}
          restore-keys: |
            ${{ runner.os }}-eas-build-local-

      - name: 🔍 Run TypeScript check
        run: npx tsc --noEmit

      - name: 🧹 Run ESLint
        run: npx expo lint --max-warnings 100

      - name: 🔧 Setup environment
        run: |
          echo "Setting up build environment..."
          echo "Build profile: ${{ github.event.inputs.build_profile }}"
          echo "Build message: ${{ github.event.inputs.build_message }}"
          echo "Publish OTA update: ${{ github.event.inputs.publish_update }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"

      # Discord notifications disabled for now
      # - name: 🚀 Discord OTA Notification
      #   uses: rjstone/discord-webhook-notify@v1
      #   with:
      #     severity: info
      #     username: "11:11 DEVELOPER"
      #     color: '#00ff88'
      #     description: |
      #       🌟 **11:11 APP DEVELOPER** pushed a **OTA UPDATE** 🌟
      #       
      #       ⚡ **Channel:** ${{ github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile }}
      #       💬 **Message:** ${{ github.event.inputs.update_message }}
      #       👤 **Developer:** ${{ github.actor }}
      #       🔥 **Status:** ${{ github.event.inputs.publish_update == 'true' && 'LIVE UPDATE' || 'BUILD + PREVIEW' }}
      #     details: |
      #       ${{ github.event.inputs.publish_update == 'true' && '🎯 Update is being published to users!' || '🛠️ Building new version for testing!' }}
      #       
      #       ⏰ **Time:** $(date)
      #       🌐 **Build:** #${{ github.run_number }}
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: 🍎 Build iOS app
        run: |
          echo "Starting EAS build..."
          export NODE_OPTIONS="--openssl-legacy-provider --max_old_space_size=4096"
          eas build --platform ios --profile ${{ github.event.inputs.build_profile }} --local --output ./build.ipa --message "${{ github.event.inputs.build_message }}" --non-interactive
        env:
          CI: true

      - name: 📡 Publish OTA Update
        if: ${{ github.event.inputs.publish_update == 'true' }}
        run: |
          echo "Publishing OTA update..."
          eas update --channel ${{ github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile }} --message "${{ github.event.inputs.update_message }}" --non-interactive

      # Discord notifications disabled for now
      # - name: ✅ Discord Success Update
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: success()
      #   with:
      #     severity: info
      #     username: "11:11 DEVELOPER"
      #     color: '#00ff00'
      #     description: |
      #       ✅ **11:11 APP UPDATE COMPLETE!** ✅
      #       
      #       🎉 **SUCCESS:** ${{ github.event.inputs.publish_update == 'true' && 'OTA Update Published!' || 'Build Ready!' }}
      #       ⚡ **Channel:** ${{ github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile }}
      #       👤 **Developer:** ${{ github.actor }}
      #     details: |
      #       ${{ github.event.inputs.publish_update == 'true' && '🚀 Users can now receive the update!' || '📱 New build is ready for download!' }}
      #       
      #       🔗 [Download Build](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      # - name: ❌ Discord Failure Update
      #   uses: rjstone/discord-webhook-notify@v1
      #   if: failure()
      #   with:
      #     severity: error
      #     username: "11:11 DEVELOPER"
      #     color: '#ff0000'
      #     description: |
      #       ❌ **11:11 APP UPDATE FAILED!** ❌
      #       
      #       💥 **ERROR:** Build process failed
      #       ⚡ **Channel:** ${{ github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile }}
      #       👤 **Developer:** ${{ github.actor }}
      #     details: |
      #       🔧 Check the build logs for details
      #       
      #       🔗 [View Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
      #     webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: 📱 Upload build artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ios-build-${{ github.event.inputs.build_profile }}-${{ github.run_number }}
          path: ./build.ipa
          retention-days: 30

      - name: 📋 Generate build info
        if: always()
        run: |
          echo "=== BUILD INFORMATION ===" > build-info.txt
          echo "Status: ${{ job.status }}" >> build-info.txt
          echo "Profile: ${{ github.event.inputs.build_profile }}" >> build-info.txt
          echo "Build Message: ${{ github.event.inputs.build_message }}" >> build-info.txt
          echo "OTA Update Published: ${{ github.event.inputs.publish_update }}" >> build-info.txt
          echo "Update Message: ${{ github.event.inputs.update_message }}" >> build-info.txt
          echo "Run Number: ${{ github.run_number }}" >> build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-info.txt
          echo "Timestamp: $(date)" >> build-info.txt
          echo "=========================" >> build-info.txt

      - name: 📋 Upload build info
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-info-${{ github.run_number }}
          path: build-info.txt
          retention-days: 30

      - name: 🎉 Build Success Notification
        if: success()
        run: |
          echo "🎉 Build completed successfully!"
          echo "📱 Your iOS app is ready for download from the artifacts section."
          echo "🔗 Build profile: ${{ github.event.inputs.build_profile }}"
          if [ "${{ github.event.inputs.publish_update }}" == "true" ]; then
            echo "📡 OTA update has been published!"
          fi

      - name: ❌ Build Failure Notification
        if: failure()
        run: |
          echo "❌ Build failed!"
          echo "📋 Check the build logs above for details."
          echo "💡 Common issues: TypeScript errors, missing dependencies, or EAS configuration problems."
          echo "🔑 For Apple credential issues, make sure you've run 'eas build' locally first to set up credentials."
          echo "🍎 Also ensure EXPO_APPLE_ID, EXPO_APPLE_PASSWORD, and EXPO_TEAM_ID secrets are set in GitHub." 