name: Build iOS App with EAS

on:
  workflow_dispatch:
    inputs:
      build_profile:
        description: 'Build profile to use'
        required: true
        default: 'preview-device'
        type: choice
        options:
          - preview-device
          - development
          - production
          - testflight
      build_message:
        description: 'Build message'
        required: false
        default: 'GitHub Actions build'
      publish_update:
        description: 'Publish OTA update after build'
        required: false
        default: false
        type: boolean
      update_message:
        description: 'OTA update message'
        required: false
        default: 'GitHub Actions OTA update'

jobs:
  build-ios:
    runs-on: macos-latest
    
    steps:
      - name: 🏗 Setup repo
        uses: actions/checkout@v4

      - name: 🏗 Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: 18.x
          cache: npm

      - name: 🏗 Setup EAS
        uses: expo/expo-github-action@v8
        with:
          eas-version: latest
          token: ${{ secrets.EXPO_TOKEN }}

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔍 Run TypeScript check
        run: npx tsc --noEmit

      - name: 🧹 Run ESLint
        run: npx eslint . --ext .ts,.tsx,.js,.jsx --max-warnings 0

      - name: 🔧 Setup environment
        run: |
          echo "Setting up build environment..."
          echo "Build profile: ${{ github.event.inputs.build_profile }}"
          echo "Build message: ${{ github.event.inputs.build_message }}"
          echo "Publish OTA update: ${{ github.event.inputs.publish_update }}"
          echo "Branch: ${{ github.ref_name }}"
          echo "Commit: ${{ github.sha }}"

      - name: 🍎 Build iOS app
        run: |
          echo "Starting EAS build..."
          eas build --platform ios --profile ${{ github.event.inputs.build_profile }} --local --output ./build.ipa --message "${{ github.event.inputs.build_message }}" --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
          EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
          EXPO_TEAM_ID: ${{ secrets.EXPO_TEAM_ID }}
          EAS_PROJECT_ID: e3775235-7f75-42c8-906e-8171c4a1e54b
          CI: true

      - name: 📡 Publish OTA Update
        if: ${{ github.event.inputs.publish_update == 'true' }}
        run: |
          echo "Publishing OTA update..."
          eas update --channel ${{ github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile }} --message "${{ github.event.inputs.update_message }}" --non-interactive
        env:
          EXPO_TOKEN: ${{ secrets.EXPO_TOKEN }}
          EAS_PROJECT_ID: e3775235-7f75-42c8-906e-8171c4a1e54b

      - name: 📱 Upload build artifact
        uses: actions/upload-artifact@v4
        if: success()
        with:
          name: ios-build-${{ github.event.inputs.build_profile }}-${{ github.run_number }}
          path: ./build.ipa
          retention-days: 30

      - name: 📋 Generate build info
        if: always()
        run: |
          echo "=== BUILD INFORMATION ===" > build-info.txt
          echo "Status: ${{ job.status }}" >> build-info.txt
          echo "Profile: ${{ github.event.inputs.build_profile }}" >> build-info.txt
          echo "Build Message: ${{ github.event.inputs.build_message }}" >> build-info.txt
          echo "OTA Update Published: ${{ github.event.inputs.publish_update }}" >> build-info.txt
          echo "Update Message: ${{ github.event.inputs.update_message }}" >> build-info.txt
          echo "Run Number: ${{ github.run_number }}" >> build-info.txt
          echo "Commit: ${{ github.sha }}" >> build-info.txt
          echo "Branch: ${{ github.ref_name }}" >> build-info.txt
          echo "Timestamp: $(date)" >> build-info.txt
          echo "=========================" >> build-info.txt

      - name: 📋 Upload build info
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-info-${{ github.run_number }}
          path: build-info.txt
          retention-days: 30

      # Discord Notifications
      - name: 🎉 Discord Success Notification
        uses: rjstone/discord-webhook-notify@v1
        if: success()
        with:
          severity: info
          username: "Club1111 Build Bot"
          color: '#00ff00'
          avatarUrl: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          description: |
            **✅ Build Completed Successfully!**
            
            **Profile:** ${{ github.event.inputs.build_profile }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** `${{ github.sha }}`
            **Actor:** ${{ github.actor }}
            **Run:** #${{ github.run_number }}
          details: |
            📱 **iOS app is ready for download!**
            🔗 [View Artifacts](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
            
            ${{ github.event.inputs.publish_update == 'true' && '📡 **OTA Update Published!**' || '' }}
            ${{ github.event.inputs.publish_update == 'true' && format('Channel: {0}', github.event.inputs.build_profile == 'preview-device' && 'preview' || github.event.inputs.build_profile) || '' }}
          footer: "Build completed at"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: ❌ Discord Failure Notification
        uses: rjstone/discord-webhook-notify@v1
        if: failure()
        with:
          severity: error
          username: "Club1111 Build Bot"
          color: '#ff0000'
          avatarUrl: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          description: |
            **❌ Build Failed!**
            
            **Profile:** ${{ github.event.inputs.build_profile }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** `${{ github.sha }}`
            **Actor:** ${{ github.actor }}
            **Run:** #${{ github.run_number }}
          details: |
            💡 **Common issues:**
            • TypeScript errors
            • Missing dependencies
            • EAS configuration problems
            • Apple credential issues
            
            🔗 [View Build Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          footer: "Build failed at"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: ⚠️ Discord Cancelled Notification
        uses: rjstone/discord-webhook-notify@v1
        if: cancelled()
        with:
          severity: warn
          username: "Club1111 Build Bot"
          color: '#ffaa00'
          avatarUrl: https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png
          description: |
            **⚠️ Build Cancelled**
            
            **Profile:** ${{ github.event.inputs.build_profile }}
            **Branch:** ${{ github.ref_name }}
            **Commit:** `${{ github.sha }}`
            **Actor:** ${{ github.actor }}
            **Run:** #${{ github.run_number }}
          details: |
            The build was manually cancelled or timed out.
            
            🔗 [View Build Logs](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})
          footer: "Build cancelled at"
          webhookUrl: ${{ secrets.DISCORD_WEBHOOK }}

      - name: 🎉 Build Success Notification
        if: success()
        run: |
          echo "🎉 Build completed successfully!"
          echo "📱 Your iOS app is ready for download from the artifacts section."
          echo "🔗 Build profile: ${{ github.event.inputs.build_profile }}"
          if [ "${{ github.event.inputs.publish_update }}" == "true" ]; then
            echo "📡 OTA update has been published!"
          fi

      - name: ❌ Build Failure Notification
        if: failure()
        run: |
          echo "❌ Build failed!"
          echo "📋 Check the build logs above for details."
          echo "💡 Common issues: TypeScript errors, missing dependencies, or EAS configuration problems."
          echo "🔑 For Apple credential issues, make sure you've run 'eas build' locally first to set up credentials."
          echo "🍎 Also ensure EXPO_APPLE_ID, EXPO_APPLE_PASSWORD, and EXPO_TEAM_ID secrets are set in GitHub." 